---
title: Windows authentication for .NET apps
owner: Windows
---

Learn how to integrate your Windows Diego Cells with an existing Active Directory domain to enable support for
apps using Windows Authentication. With Windows Authentication, you can access a Windows app on <%= vars.windows_runtime_abbr %> to transparently authenticate using your domain credentials.

## <a id='security'></a> Security considerations

In some configurations, Windows Authentication sessions are cached by source IP and port. The Gorouter [maintains TCP connections](../concepts/http-routing.html#back-end) to application containers and reuses them for subsequent inbound HTTP requests. If this behavior is not disabled in applications using Windows Authentication, this results in user authentication sessions being shared among multiple users making HTTP requests to the Windows Authentication app. This is a serious security issue for operators and app devs to be aware of!

To disable this behavior in your applications, ensure the following properties are set correctly:

* **.Net Framework apps using the hwc_buildpack** have the `authPersistSingleRequest` and `authPersistNonNTLM` IIS settings set to false by default. They should remain false. Ensure that any Windows applications using Windows Authentication do not override those properties!
* **.Net Core apps using the binary_buildpack** need to ensure that the `Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions` for `PersistKerberosCredentials` and `PersistNtlmCredentials` are set to false.

If applications cannot be configured to disable this behavior, TCP routing must be used instead. The TCP router does not maintain connections to application containers at all, circumventing this concern completely.

To activate TCP routing, see [Networking](../operating/config-networking.html) for the <%= vars.app_runtime_abbr %> tile.

Apps using Windows Authentication can use the `--no-route` flag for the  `cf push` command, or specify a `routes` section in the app manifest with only a TCP route. The `--no-route` flag no longer unbinds all existing routes associated with the app.

For further reading, consult the following documentation on the .Net Framework + .Net Core authentication properties:

* [.Net Core documentation for the Negotiate auth properties](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.negotiate.negotiateoptions?view=aspnetcore-8.0)
* [.Net Framework documentation on IIS settings for Negotiate auth properties](https://learn.microsoft.com/en-us/previous-versions/iis/settings-schema/aa347472(v=vs.90))
* [Examples for configuring Windows Authentication properties in apps](https://learn.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-8.0&tabs=visual-studio)

## <a id='prerequisites'></a> Prerequisites

Before you configure the <%= vars.windows_runtime_abbr %> tile for Windows Authentication, you must meet the following requirements:

* Your Active Directory instance must be configured with a GMSA and a regular user that has been granted access to the GMSA credentials. See the [Microsoft documentation](https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/manage-serviceaccounts) for specifics.
* Your Windows Diego Cells must have the appropriate [firewall rules](https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/gmsa-troubleshooting#check-the-firewall-configuration) to access the Active Directory instance.
* [Application Security Groups](../concepts/asg.html) must be configured to allow traffic from application containers to the Active Directory instance.
* Either [TCP routing](../operating/configure-pas.html#networking) must be enabled and configured, or applications must be told not to persist authentication sessions for NTLM + Kerberos.
* If using Gorouter for routing, ensure that the **Enable support for NTLM authentication in Gorouter** property is enabled in the <%= vars.app_runtime_abbr %> tile's Networking settings. This will allow Gorouter to properly handle NTLM's challenge-response style negotiation when apps are configured with multiple instances. If Routed Isolation Segments are used in front of apps using Windows Authentication, this setting must be set on the <%= vars.segment_runtime_full %> tile as well.
* **NOTE** Support for  Windows Authentication via Gorouter was added in the following versions of <%= vars.app_runtime_abbr %> + IST:
  * <%= vars.app_runtime_abbr %> 4.0.18 and IST 4.0.18
  * <%= vars.app_runtime_abbr %> 5.0.8 + IST 5.0.8
  * <%= vars.app_runtime_abbr %> 6.0.0 + IST 6.0.0


<p class="note caution">
<span class="note__title">Caution</span>
Using Windows Authentication through Gorouter may have undesirable security consequences if applications are not configured to disable persistent NTLM + Kerberos connections.
In these situations, the applications must <strong>only</strong> be accessible through TCP routes.</p>

* The **The Gorouter and apps use mutual TLS to verify each otherâ€™s identity** setting described in [Advanced Features](installing.html#config-advanced-features) must not be selected, as this deactivates TCP routing.
* Depending on your IaaS, you might need to configure BOSH DNS handlers so that your application containers can resolve domain resources through the Active Directory instance. See the <a class="external-link" href="https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/index.html"><strong>VMware Tanzu Operations Manager Documentation</strong></a> for IaaS-specific instructions.
* Apps intending to use Windows Authentication must use the HWC buildpack.

<p class="note">
<span class="note__title">Note</span>
Use an isolation segment for Windows Authentication, because all apps in
the <%= vars.windows_runtime_abbr %> installation have access to GMSA credentials. To associate a <%= vars.windows_runtime_abbr %> tile with an isolation segment so that its Diego Cells run in that segment, see <a href="./isolation.html">Windows Diego Cells in isolation segments</a>.</p>

## <a id='limitations'></a> Limitations

* Authenticating through the cf CLI with Windows Authentication is not supported.
* Every app in the <%= vars.windows_runtime_abbr %> installation has access to GMSA credentials. There is no way to configure it on an app-by-app basis.
* Windows Authentication delegation from app to service is not supported.

## <a id='configure-tile'></a> Configuring the tile

Start the configuration by following the steps in the [Microsoft documentation](https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/manage-serviceaccounts#create-a-credential-spec) to create the appropriate values, then select **Windows Authentication** and use this procedure:

1. Under **Windows Authentication**, select **Configure**.
2. In the **For security reasons, apps using Windows Authentication must use TCP routing** text box, enter `X` to acknowledge this requirement. See [Security considerations](#security) for the details.
3. In **Active Directory FQDN**, enter the domain of the Active Directory instance that application containers use for authentication.
4. In **Standard user name**, enter the name of the user account with access to the gMSA password. This is a user account.
5. In **Standard user password**, enter the password of the user account with access to the gMSA password. This is a user account.
6. In **Container credential spec**, enter a JSON string that describes the gMSA account and domain details. For more information about Windows Authentication, see [Microsoft documentation](https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/manage-serviceaccounts#create-a-credential-spec).
7. Click **Save**.
8. [Deploying the tile](installing.html#deploy).

## <a id='rotating'></a> Rotating the standard user

Follow the steps in the [Microsoft documentation](https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/manage-serviceaccounts#use-case-for-creating-gmsa-account-for-non-domain-joined-container-hosts), but do not create a new service account or security group.

1. Create a new user account.
2. Add the user to the security group that guards access to the GMSA service account.
3. Update the **Standard user name** and **Standard user password** text boxes with the new user information.
4. Click **Save**.
5. [Deploying the tile](installing.html#deploy).

## <a id='troubleshooting'></a> Troubleshooting

For troubleshooting details, see [Troubleshooting Windows authentication](./troubleshooting.html#windows-authentication).
